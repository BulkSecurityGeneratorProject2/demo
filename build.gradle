buildscript {
    repositories {
    	mavenCentral()
    	jcenter()
    	maven{ url "http://mirrors.ibiblio.org/maven2/" }
        maven{ url "http://repo.spring.io/snapshot"}
        maven{ url "http://repo.spring.io/milestone"}
       // maven{ url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
    	//classpath "org.liquibase:liquibase-gradle-plugin:1.2.0"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.3.0.RELEASE"
        //classpath "gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.4.7"
    }
}

/*plugins {
  id "com.gorylenko.gradle-git-properties" version "1.4.7"
}*/

apply plugin: 'java'
//apply plugin: 'org.liquibase.gradle'
//apply plugin: "com.gorylenko.gradle-git-properties"
apply plugin: 'spring-boot'
apply plugin: 'eclipse'
apply plugin: 'idea'

//apply from: 'liquibase.gradle'
apply from: 'mybatis.gradle'


sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    baseName = 'random'
    version = '0.0.1-SNAPSHOT'
}

repositories {
	mavenCentral()
	jcenter()
	maven{ url "http://mirrors.ibiblio.org/maven2/" }
    maven{ url "http://maven.oschina.net/content/groups/public/"}
    maven{ url "http://repo.spring.io/snapshot"}
    maven{ url "http://repo.spring.io/milestone"}
}

configurations {
	compile.exclude module: "spring-boot-starter-tomcat"
}

dependencies {
	// restart issue with redis in coding but build, so removed, 
    //compile("org.springframework.boot:spring-boot-devtools")
    compile("org.springframework.boot:spring-boot-starter-web")
    
    compile("org.springframework.boot:spring-boot-starter-websocket")
    compile('org.springframework.security:spring-security-messaging')
    
    compile("org.springframework.boot:spring-boot-starter-jetty")
    //compile("org.springframework.boot:spring-boot-starter-data-jpa")
    //Mybatis-spring
    compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatis_spring_boot_starter_version}")
    compile('javax.persistence:persistence-api:1.0.2')
    //compile("org.mybatis:mybatis-spring:${mybatis_spring_version}")
    //compile("org.mybatis:mybatis:${mybatis_version}")
    //compile("org.springframework:spring-jdbc")
    //compile("org.springframework.batch:spring-batch-infrastructure")
    
    compile("org.springframework.boot:spring-boot-starter-mail")
    
    compile("org.springframework.boot:spring-boot-starter-aop")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-actuator-docs")
    compile("org.jolokia:jolokia-core")
    
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-test")
    compile("org.springframework.security:spring-security-jwt")
    compile("org.springframework.boot:spring-boot-starter-redis")
    compile("org.springframework.boot:spring-boot-starter-amqp")
    //compile("com.h2database:h2")
    compile("joda-time:joda-time")
    //compile("joda-time:joda-time-hibernate:1.4")
    compile("org.springframework.security:spring-security-data")
    //compile("org.liquibase:liquibase-core")
    //compile("com.mattbertolini:liquibase-slf4j:${liquibase_slf4j_version}")
    
    // for use in on-the-fly database setup and migrations
    compile 'org.flywaydb:flyway-core'
    
    compile("mysql:mysql-connector-java")
    
    compile("com.zaxxer:HikariCP")
    
    //compile("com.fasterxml.jackson.datatype:jackson-datatype-hibernate4")
    compile("com.fasterxml.jackson.core:jackson-core")
    compile("com.fasterxml.jackson.core:jackson-databind")
    compile("com.fasterxml.jackson.core:jackson-annotations")
    
    // rest
    // http://www.ibm.com/developerworks/cn/java/j-lo-SpringHATEOAS/
    // http://blog.csdn.net/jackyrongvip/article/details/9218817
    compile("org.springframework.boot:spring-boot-starter-hateoas")
    //compile("org.springframework.hateoas:spring-hateoas")
    
    compile("io.dropwizard.metrics:metrics-core")
	compile("io.dropwizard.metrics:metrics-graphite")
	compile("io.dropwizard.metrics:metrics-annotation:${dropwizard_metrics_version}")
	compile("io.dropwizard.metrics:metrics-healthchecks:${dropwizard_metrics_version}")
	compile("io.dropwizard.metrics:metrics-jvm:${dropwizard_metrics_version}")
	//compile("com.timgroup:java-statsd-client")
	
	compile("com.ryantenney.metrics:metrics-spring:${metrics_spring_version}")
	
	compile("org.apache.commons:commons-lang3:${commons_lang_version}")
	
	//compile("org.thymeleaf:thymeleaf")
	
	compile ("org.springframework.boot:spring-boot-starter-thymeleaf")
	
	// remote shell
	// compile("org.springframework.boot:spring-boot-starter-remote-shell")
	    
    testCompile("org.springframework.boot:spring-boot-starter-test")
    //testCompile("com.mattbertolini:liquibase-slf4j:${liquibase_slf4j_version}")
    
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}

task echoProjectProperties << {
	println project.projectDir
}
