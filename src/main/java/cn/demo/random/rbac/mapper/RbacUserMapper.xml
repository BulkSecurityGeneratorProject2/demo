<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.demo.random.rbac.mapper.RbacUserMapper" >
  <resultMap id="BaseResultMap" type="cn.demo.random.rbac.domain.RbacUser" >
    <id column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="commonts" property="commonts" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="DATE" />
    <result column="creator" property="creator" jdbcType="BIGINT" />
    <result column="isvalid" property="isvalid" jdbcType="VARCHAR" />
    <result column="activated" property="activated" jdbcType="BIT" />
    <result column="activation_key" property="activationKey" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="lang_key" property="langKey" jdbcType="VARCHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="reset_date" property="resetDate" jdbcType="TIMESTAMP" />
    <result column="reset_key" property="resetKey" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_pwd" property="userPwd" jdbcType="VARCHAR" />
    <result column="validate_date" property="validateDate" jdbcType="DATE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, commonts, create_date, creator, isvalid, activated, activation_key, email, 
    lang_key, real_name, reset_date, reset_key, tel, user_name, user_pwd, validate_date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.demo.random.rbac.domain.RbacUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from demodb..rbac_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from demodb..rbac_user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from demodb..rbac_user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.demo.random.rbac.domain.RbacUserExample" >
    delete from demodb..rbac_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.demo.random.rbac.domain.RbacUser" >
    insert into demodb..rbac_user (user_id, commonts, create_date, 
      creator, isvalid, activated, 
      activation_key, email, lang_key, 
      real_name, reset_date, reset_key, 
      tel, user_name, user_pwd, 
      validate_date)
    values (#{userId,jdbcType=BIGINT}, #{commonts,jdbcType=VARCHAR}, #{createDate,jdbcType=DATE}, 
      #{creator,jdbcType=BIGINT}, #{isvalid,jdbcType=VARCHAR}, #{activated,jdbcType=BIT}, 
      #{activationKey,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{langKey,jdbcType=VARCHAR}, 
      #{realName,jdbcType=VARCHAR}, #{resetDate,jdbcType=TIMESTAMP}, #{resetKey,jdbcType=VARCHAR}, 
      #{tel,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{userPwd,jdbcType=VARCHAR}, 
      #{validateDate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="cn.demo.random.rbac.domain.RbacUser" >
    insert into demodb..rbac_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="commonts != null" >
        commonts,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="isvalid != null" >
        isvalid,
      </if>
      <if test="activated != null" >
        activated,
      </if>
      <if test="activationKey != null" >
        activation_key,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="langKey != null" >
        lang_key,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="resetDate != null" >
        reset_date,
      </if>
      <if test="resetKey != null" >
        reset_key,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userPwd != null" >
        user_pwd,
      </if>
      <if test="validateDate != null" >
        validate_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="commonts != null" >
        #{commonts,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=DATE},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=BIGINT},
      </if>
      <if test="isvalid != null" >
        #{isvalid,jdbcType=VARCHAR},
      </if>
      <if test="activated != null" >
        #{activated,jdbcType=BIT},
      </if>
      <if test="activationKey != null" >
        #{activationKey,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="langKey != null" >
        #{langKey,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="resetDate != null" >
        #{resetDate,jdbcType=TIMESTAMP},
      </if>
      <if test="resetKey != null" >
        #{resetKey,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null" >
        #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="validateDate != null" >
        #{validateDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.demo.random.rbac.domain.RbacUserExample" resultType="java.lang.Integer" >
    select count(*) from demodb..rbac_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update demodb..rbac_user
    <set >
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.commonts != null" >
        commonts = #{record.commonts,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=DATE},
      </if>
      <if test="record.creator != null" >
        creator = #{record.creator,jdbcType=BIGINT},
      </if>
      <if test="record.isvalid != null" >
        isvalid = #{record.isvalid,jdbcType=VARCHAR},
      </if>
      <if test="record.activated != null" >
        activated = #{record.activated,jdbcType=BIT},
      </if>
      <if test="record.activationKey != null" >
        activation_key = #{record.activationKey,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.langKey != null" >
        lang_key = #{record.langKey,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null" >
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.resetDate != null" >
        reset_date = #{record.resetDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.resetKey != null" >
        reset_key = #{record.resetKey,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null" >
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userPwd != null" >
        user_pwd = #{record.userPwd,jdbcType=VARCHAR},
      </if>
      <if test="record.validateDate != null" >
        validate_date = #{record.validateDate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update demodb..rbac_user
    set user_id = #{record.userId,jdbcType=BIGINT},
      commonts = #{record.commonts,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=DATE},
      creator = #{record.creator,jdbcType=BIGINT},
      isvalid = #{record.isvalid,jdbcType=VARCHAR},
      activated = #{record.activated,jdbcType=BIT},
      activation_key = #{record.activationKey,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      lang_key = #{record.langKey,jdbcType=VARCHAR},
      real_name = #{record.realName,jdbcType=VARCHAR},
      reset_date = #{record.resetDate,jdbcType=TIMESTAMP},
      reset_key = #{record.resetKey,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_pwd = #{record.userPwd,jdbcType=VARCHAR},
      validate_date = #{record.validateDate,jdbcType=DATE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.demo.random.rbac.domain.RbacUser" >
    update demodb..rbac_user
    <set >
      <if test="commonts != null" >
        commonts = #{commonts,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=DATE},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=BIGINT},
      </if>
      <if test="isvalid != null" >
        isvalid = #{isvalid,jdbcType=VARCHAR},
      </if>
      <if test="activated != null" >
        activated = #{activated,jdbcType=BIT},
      </if>
      <if test="activationKey != null" >
        activation_key = #{activationKey,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="langKey != null" >
        lang_key = #{langKey,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="resetDate != null" >
        reset_date = #{resetDate,jdbcType=TIMESTAMP},
      </if>
      <if test="resetKey != null" >
        reset_key = #{resetKey,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null" >
        user_pwd = #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="validateDate != null" >
        validate_date = #{validateDate,jdbcType=DATE},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.demo.random.rbac.domain.RbacUser" >
    update demodb..rbac_user
    set commonts = #{commonts,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=DATE},
      creator = #{creator,jdbcType=BIGINT},
      isvalid = #{isvalid,jdbcType=VARCHAR},
      activated = #{activated,jdbcType=BIT},
      activation_key = #{activationKey,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      lang_key = #{langKey,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      reset_date = #{resetDate,jdbcType=TIMESTAMP},
      reset_key = #{resetKey,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_pwd = #{userPwd,jdbcType=VARCHAR},
      validate_date = #{validateDate,jdbcType=DATE}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  
  <!-- 自定义操作 -->
    <select id="findOneByUserName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from demodb..rbac_user
    where user_name = #{userName,jdbcType=VARCHAR}
  </select>
</mapper>